# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'retrival_system.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        # 初始化UI窗口
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(545, 428)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.user_name = QtWidgets.QLabel(self.centralwidget)
        self.user_name.setGeometry(QtCore.QRect(380, 10, 61, 23))
        self.user_name.setObjectName("user_name")

        self.login_button = QtWidgets.QPushButton(self.centralwidget)
        self.login_button.setGeometry(QtCore.QRect(440, 10, 75, 23))
        self.login_button.setObjectName("login_button")
        self.login_button.clicked.connect(self._login)

        self.research_text = QtWidgets.QLineEdit(self.centralwidget)
        self.research_text.setGeometry(QtCore.QRect(30, 90, 241, 31))
        self.research_text.setObjectName("research_text")

        self.research_button = QtWidgets.QPushButton(self.centralwidget)
        self.research_button.setGeometry(QtCore.QRect(280, 90, 75, 31))
        self.research_button.setObjectName("research_button")
        self.research_button.clicked.connect(self._research)

        self.result_list = QtWidgets.QListWidget(self.centralwidget)
        self.result_list.setGeometry(QtCore.QRect(30, 140, 321, 231))
        self.result_list.setObjectName("result_list")
        self.result_list.itemDoubleClicked.connect(self._view_path)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 545, 23))
        self.menubar.setObjectName("menubar")

        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # 初始化数据库
        from data import DataManager

        USER_PATH = 'Information_Retrieval/Lab3/data/user.json'
        self.user_data = DataManager.load('user', USER_PATH)

        DATA_PATH = 'Information_Retrieval/Lab3/data/data.json'
        self.data = DataManager.load('data', DATA_PATH)

        # 初始化当前用户信息
        self.current_user_authority = 0

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.user_name.setText(_translate("MainWindow", "游客"))
        self.login_button.setText(_translate("MainWindow", "切换用户"))
        self.research_button.setText(_translate("MainWindow", "搜索"))

    def _login(self):
        user_name = self.user_data.get('name')
        user_password = self.user_data.get('password')
        user_authority = self.user_data.get('authority')

        text, flag = QtWidgets.QInputDialog.getText(
            self.centralwidget, '切换用户', '请输入用户名：')
        if (not flag) or not(text in user_name):
            QtWidgets.QMessageBox.critical(
                self.centralwidget, '错误', '用户名错误或未注册')

        if text == '游客':
            self.current_user_authority = '游客'
            self.current_user_authority = 0
            self.user_name.setText("游客")
        else:
            for i in range(len(user_name)):
                if user_name[i] == text:
                    break

            text, flag = QtWidgets.QInputDialog.getText(
                self.centralwidget, '输入密码', '请输入密码')
            if (not flag) or user_password[i] != text:
                QtWidgets.QMessageBox.critical(
                    self.centralwidget, '错误', '密码错误')
            else:
                QtWidgets.QMessageBox.information(
                    self.centralwidget, '成功', '切换成功')
                self.current_user_authority = user_authority[i]
                self.user_name.setText(user_name[i])

    def _research(self):
        question = self.research_text.text()
        answer = self.data.retrieval(question, 5, self.current_user_authority)

        self.result_list.clear()
        for i in range(len(answer)):
            current_label = QtWidgets.QListWidgetItem()
            current_label.setText(answer[i]['title'])
            current_label.path = answer[i]['path']
            self.result_list.insertItem(i, current_label)

    def _view_path(self, item):
        path = item.path

        if not path.startswith('Lab3'):
            import webbrowser
            webbrowser.open(path)


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    main_window = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()

    ui.setupUi(main_window)
    main_window.show()

    sys.exit(app.exec_())
