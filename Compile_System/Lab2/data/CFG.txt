Module -> epsilon | Defination ; Module | Assignment ; Module | Control Module | Function Module | Struct Module | Call ; Module

Defination -> Data id
Data -> Type Array
Type -> int | float | bool | id
Array -> [ const ] Array | epsilon

Struct -> struct id { Statement }
Statement -> Defination ; | Defination ; Statement

Function -> Data id ( Parameter ) { Process }
Parameter -> epsilon | Defination | Defination , Parameter
Process -> Module Return
Return -> return id Index ; | epsilon

Assignment -> id Index = Value
Value -> Value + Value | Value - Value | Value * Value | Value / Value | Call
Value -> - Value
Value -> ( Value )
Value -> const | id Index
Index -> [ Value ] Index | epsilon

Control -> If | If Else | While
If -> if ( Condition ) { Module }
Else -> else { Module }
While -> while ( Condition ) { Module }
Condition -> Condition and Condition | Condition or Condition | not Condition | ( Condition ) | Value Relop Value | 1 | 0
Relop -> < | <= | == | != | > | >=

Call -> id ( Transmit )
Transmit -> epsilon | Value | Value , Transmit

end

以空格分隔字符
非终结符以大写开头
end标识语法结尾

一行只能定义一个变量
定义时不能进行初始化
数组长度只能用常量初始化
布尔真假用1和0表示
